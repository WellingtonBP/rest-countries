{"version":3,"sources":["components/Countries/CountryDetails/CountryDetails.module.css","components/Filter/Filter.module.css","components/Header/Header.module.css","components/Countries/CountriesList.module.css","components/UI/Spinner.module.css","components/Countries/CountryCard/CountryCard.module.css","components/Header/Header.js","store/countries-context.js","components/Filter/Filter.js","components/UI/Spinner.js","components/Countries/CountryCard/CountryCard.js","components/Countries/CountriesList.js","pages/Home.js","components/Countries/CountryDetails/CountryDetails.js","pages/Country.js","App.js","index.js"],"names":["module","exports","darkMode","localStorage","getItem","Header","useState","isDark","setTheme","useEffect","document","documentElement","style","setProperty","setItem","removeItem","className","classes","header","to","onClick","current","type","countriesContext","createContext","countries","filter","countryName","regionName","currentCountries","isLoading","filterCountries","filterCountriesHandler","country","cNameReg","RegExp","test","name","nativeName","region","CountriesProvider","props","setCountries","setFilter","setLoading","fetch","then","response","json","data","Provider","value","prev","bind","length","children","Filter","countriesCtx","useContext","showList","regionFilter","setRegion","setCountryName","selectRegionHandler","filter_section","input","placeholder","onChange","event","target","id","aria-labelledby","map","index","Spinner","spinner","CountryCard","flag","population","capital","alpha3Code","src","alt","CountriesList","countries_list","HomePage","CountryDetails","history","useHistory","subregion","topLevelDomain","currencies","languages","borders","country_details","back","goBack","details","join","currency","language","borders_countries","border","Country","params","useParams","search","find","App","path","exact","component","Home","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1a554356.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"country_details\":\"CountryDetails_country_details__1MRPp\",\"back\":\"CountryDetails_back__3su8m\",\"details\":\"CountryDetails_details__28pur\",\"borders_countries\":\"CountryDetails_borders_countries__1mJa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_section\":\"Filter_filter_section__30GXP\",\"input\":\"Filter_input__2DoVp\",\"filter\":\"Filter_filter__1E5tH\",\"slide-down\":\"Filter_slide-down__2_hOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countries_list\":\"CountriesList_countries_list__1g1nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__19owv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country\":\"CountryCard_country__21kgo\"};","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport classes from './Header.module.css'\n\nconst darkMode = localStorage.getItem('darkMode')\n\nconst Header = () => {\n  const [isDark, setTheme] = useState(darkMode)\n\n  useEffect(() => {\n    if (isDark) {\n      document.documentElement.style.setProperty('--background', '#202c37')\n      document.documentElement.style.setProperty('--elements', '#2b3945')\n      document.documentElement.style.setProperty('--text', '#ffffffe0')\n      localStorage.setItem('darkMode', 'true')\n    } else {\n      document.documentElement.style.setProperty('--background', '#fafafa')\n      document.documentElement.style.setProperty('--elements', '#ffffff')\n      document.documentElement.style.setProperty('--text', '#111517e0')\n      localStorage.removeItem('darkMode')\n    }\n  }, [isDark])\n\n  const toggleThemeHandler = () => setTheme(current => !current)\n\n  return (\n    <header className={classes.header}>\n      <div className=\"container\">\n        <Link to=\"/\">Where in the World?</Link>\n        <button onClick={toggleThemeHandler} type=\"button\">\n          <i className={`fa-moon ${isDark ? 'fas' : 'far'}`}></i>\n          <span>{isDark ? 'Light Mode' : 'Dark Mode'}</span>\n        </button>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import { createContext, useEffect, useState } from 'react'\n\nconst countriesContext = createContext({\n  countries: [],\n  filter: {\n    countryName: '',\n    regionName: '',\n  },\n  currentCountries: [],\n  isLoading: true,\n  filterCountries: (regionName, countryName) => {},\n})\n\nconst filterCountriesHandler = ({countryName, regionName}, country) => {\n  const cNameReg = new RegExp(countryName, 'gi')\n  if (countryName !== '' && regionName === '')\n    return cNameReg.test(country.name) || cNameReg.test(country.nativeName)\n  if (countryName === '' && regionName !== '')\n    return country.region === regionName\n  return (\n    (cNameReg.test(country.name) || cNameReg.test(country.nativeName)) &&\n    country.region === regionName\n  )\n}\n\nconst CountriesProvider = props => {\n  const [countries, setCountries] = useState({\n    countries: [],\n    currentCountries: [],\n  })\n  const [filter, setFilter] = useState({\n    countryName: '',\n    regionName: '',\n  })\n\n  const [isLoading, setLoading] = useState(true)\n\n  const filterCountries = (regionName, countryName) => {\n    setFilter({ regionName, countryName })\n    if (regionName || countryName) {\n      setCountries(prev => ({\n        ...prev,\n        currentCountries: prev.countries.filter(filterCountriesHandler.bind(null, {countryName, regionName})),\n      }))\n    } else {\n      if (countries.countries.length > countries.currentCountries.length) {\n        setCountries(prev => ({ ...prev, currentCountries: prev.countries }))\n      }\n    }\n  }\n\n  useEffect(() => {\n    fetch('https://restcountries.eu/rest/v2/all')\n      .then(response => response.json())\n      .then(data => {\n        setLoading(false)\n        setCountries({\n          countries: data,\n          currentCountries: data,\n        })\n      })\n  }, [])\n\n  return (\n    <countriesContext.Provider\n      value={{\n        countries: countries.countries,\n        currentCountries: countries.currentCountries,\n        isLoading,\n        filterCountries,\n        filter,\n      }}\n    >\n      {props.children}\n    </countriesContext.Provider>\n  )\n}\n\nexport { countriesContext }\nexport default CountriesProvider\n","import { useState, useEffect, useContext } from 'react'\n\nimport { countriesContext } from '../../store/countries-context'\nimport classes from './Filter.module.css'\n\nconst Filter = props => {\n  const countriesCtx = useContext(countriesContext)\n  const [regionFilter, setRegion] = useState({\n    value: countriesCtx.filter.regionName,\n    showList: false,\n  })\n  const [countryName, setCountryName] = useState(\n    countriesCtx.filter.countryName\n  )\n  const regions = ['Africa', 'Americas', 'Asia', 'Europe', 'Asia']\n\n  const changeCountryNameHandler = event => {\n    setCountryName(event.target.value)\n    countriesCtx.filterCountries(regionFilter.value, event.target.value)\n  }\n\n  const toggleRegionList = () =>\n    setRegion(prev => ({ ...prev, showList: !prev.showList }))\n\n  const selectRegionHandler = regionName => {\n    setRegion({\n      value: regionName,\n      showList: false,\n    })\n    countriesCtx.filterCountries(regionName, countryName)\n  }\n\n  return (\n    <section className={`container ${classes.filter_section}`}>\n      <div className={classes.input}>\n        <i className=\"fas fa-search\"></i>\n        <input\n          value={countryName}\n          type=\"text\"\n          placeholder=\"Search for a country\"\n          onChange={changeCountryNameHandler}\n        />\n      </div>\n      <div className={classes.filter}>\n        <button id=\"region-filter\" onClick={toggleRegionList}>\n          {regionFilter.value ? regionFilter.value : 'Filter by Region'}\n          <i\n            className={`fas fa-angle-${regionFilter.showList ? 'up' : 'down'}`}\n          ></i>\n        </button>\n        {regionFilter.showList && (\n          <ul aria-labelledby=\"region-filter\">\n            <li onClick={selectRegionHandler.bind(this, '')}>All</li>\n            {regions.map((region, index) => (\n              <li onClick={selectRegionHandler.bind(this, region)} key={index}>\n                {region}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default Filter\n","import classes from './Spinner.module.css'\n\nconst Spinner = () => <div className={classes.spinner}></div>\nexport default Spinner\n","import { Link } from 'react-router-dom'\n\nimport classes from './CountryCard.module.css'\n\nconst CountryCard = props => {\n  const {name, flag, population, region, capital, alpha3Code} = props.country;\n\n  return (\n    <Link className={classes.country} to={`/${alpha3Code}`}>\n      <article>\n        <img src={flag} alt={name} />\n        <section>\n          <h1>{name}</h1>\n          <p>\n            <span>Population: </span>\n            {population}\n          </p>\n          <p>\n            <span>Region: </span>\n            {region}\n          </p>\n          <p>\n            <span>Capital: </span>\n            {capital}\n          </p>\n        </section>\n      </article>\n    </Link>\n  )\n}\n\nexport default CountryCard\n","import { useContext } from 'react'\n\nimport { countriesContext } from '../../store/countries-context'\nimport classes from './CountriesList.module.css'\nimport Spinner from '../UI/Spinner'\nimport CountryCard from './CountryCard/CountryCard'\n\nconst CountriesList = props => {\n  const countriesCtx = useContext(countriesContext)\n  const { isLoading, currentCountries } = countriesCtx\n\n  if (isLoading) {\n    return <Spinner />\n  }\n  if (currentCountries.length === 0) {\n    return <h1 className=\"info\">No countries found!</h1>\n  }\n  return (\n    <section className={`container ${classes.countries_list}`}>\n      {currentCountries.map((country, index) => (\n        <CountryCard country={country} key={index}/>\n      ))}\n    </section>\n  )\n}\n\nexport default CountriesList\n","import Filter from '../components/Filter/Filter'\nimport CountriesList from '../components/Countries/CountriesList'\n\nconst HomePage = props => {\n  return (\n    <>\n      <Filter />\n      <CountriesList />\n    </>\n  )\n}\n\nexport default HomePage\n","import { Link, useHistory } from 'react-router-dom'\n\nimport classes from './CountryDetails.module.css'\n\nconst CountryDetails = props => {\n  const history = useHistory()\n  const {\n    flag,\n    name,\n    nativeName,\n    population,\n    region,\n    subregion,\n    capital,\n    topLevelDomain,\n    currencies,\n    languages,\n    borders,\n  } = props.country\n\n  return (\n    <article className={`${classes.country_details} container`}>\n      <button className={classes.back} onClick={() => history.goBack()}>\n        <i className=\"fas fa-long-arrow-alt-left\"></i>Back\n      </button>\n      <img src={flag} alt={name} />\n      <section>\n        <h1>{name}</h1>\n        <section className={classes.details}>\n          <div>\n            <p>\n              <span>Native Name: </span>\n              {nativeName}\n            </p>\n            <p>\n              <span>Population: </span>\n              {population}\n            </p>\n            <p>\n              <span>Region: </span>\n              {region}\n            </p>\n            <p>\n              <span>Sub Region: </span>\n              {subregion}\n            </p>\n            <p>\n              <span>Capital: </span>\n              {capital}\n            </p>\n          </div>\n          <div>\n            <p>\n              <span>Top Level Domain: </span>\n              {topLevelDomain.join(', ')}\n            </p>\n            <p>\n              <span>Currencies: </span>\n              {currencies.map(\n                (currency, index) =>\n                  `${currency.name}${\n                    currencies.length !== index + 1 ? ', ' : ''\n                  }`\n              )}\n            </p>\n            <p>\n              <span>Languages: </span>\n              {languages.map(\n                (language, index) =>\n                  `${language.name}${\n                    languages.length !== index + 1 ? ', ' : ''\n                  }`\n              )}\n            </p>\n          </div>\n        </section>\n        <section className={classes.borders_countries}>\n          <h1>Border Countries: </h1>\n          {borders.map((border, index) => (\n            <Link to={`/${border}`} key={index}>\n              {border}\n            </Link>\n          ))}\n        </section>\n      </section>\n    </article>\n  )\n}\n\nexport default CountryDetails\n","import { useParams } from 'react-router-dom'\nimport { useContext } from 'react'\n\nimport { countriesContext } from '../store/countries-context'\nimport CountryDetails from '../components/Countries/CountryDetails/CountryDetails'\nimport Spinner from '../components/UI/Spinner'\n\nconst Country = () => {\n  const countriesCtx = useContext(countriesContext)\n  const params = useParams()\n  const search = new RegExp(`^${params.country}$`, 'i')\n  const country = countriesCtx.countries.find(country => {\n    return search.test(country.alpha3Code) || search.test(country.name) || search.test(country.nativeName)\n  });\n  \n  if(countriesCtx.isLoading) return <Spinner/>\n  if(!country) return <h1 className=\"info\">Country not found!</h1>\n  return <CountryDetails country={country}/>\n}\n\nexport default Country\n","import { Route, Switch } from 'react-router-dom'\n\nimport Header from './components/Header/Header'\nimport Home from './pages/Home'\nimport Country from './pages/Country'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:country\" component={Country}/>\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css'\nimport App from './App'\nimport CountriesProvider from './store/countries-context'\n\nReactDOM.render(\n  <BrowserRouter>\n    <CountriesProvider>\n      <App />\n    </CountriesProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}